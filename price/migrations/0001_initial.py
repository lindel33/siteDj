# Generated by Django 4.0.3 on 2022-04-10 08:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Global',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(verbose_name='Флаг страны')),
                ('color', models.TextField(verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Глобальные установки',
                'verbose_name_plural': 'Глобальные установки',
            },
        ),
        migrations.CreateModel(
            name='Ipad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory', models.TextField(help_text='16,16гб,16 gb,16 гб...', verbose_name='Память')),
                ('series', models.TextField(help_text='iPad pro,iPad mini...', verbose_name='Модели с префиксом')),
                ('names', models.TextField(help_text='Wi-Fi + Cellular...', verbose_name='WiFi')),
                ('numbers', models.TextField(help_text='iPad 12.iPad 9,iPad 11', verbose_name='Полное название')),
            ],
            options={
                'verbose_name': 'iPad',
                'verbose_name_plural': 'iPad',
            },
        ),
        migrations.CreateModel(
            name='Iphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory', models.TextField(help_text='16, 16гб, 16gb, 16гб...', verbose_name='Память')),
                ('series_prefix', models.TextField(help_text='11 pro, 11 pro max...', verbose_name='Модели с префиксом')),
                ('series_not_prefix', models.TextField(help_text='6, 7, 8, 11, 12, 13', verbose_name='Модели без префикса и букв')),
                ('extra_iphone', models.TextField(help_text='se, sr, x, xs', verbose_name='Extra модели')),
                ('full_name', models.TextField(help_text='iphone 8, iphone x, iphone 11', verbose_name='Полное название')),
            ],
            options={
                'verbose_name': 'iPhone',
                'verbose_name_plural': 'iPhone',
            },
        ),
        migrations.CreateModel(
            name='MacBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory', models.TextField(help_text='16gb,16гб,16 gb,16 гб...', verbose_name='Память')),
                ('series', models.TextField(help_text='MacBook Pro,MacBook Air...', verbose_name='Модели с префиксом')),
                ('names', models.TextField(help_text='M1', verbose_name='WiFi')),
                ('extra', models.TextField(help_text='MacBook 11, MacBook Pro 12', verbose_name='Полное название')),
            ],
            options={
                'verbose_name': 'MacBook',
                'verbose_name_plural': 'MacBook',
            },
        ),
        migrations.CreateModel(
            name='MacBook1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory', models.TextField(help_text='16, 16гб, 16gb, 16гб...', verbose_name='Память')),
                ('series', models.TextField(help_text='MacBook Pro,MacBook Air...', verbose_name='Модели с префиксом')),
                ('names', models.TextField(help_text='M1', verbose_name='Extra')),
                ('extra', models.TextField(help_text='MacBook 11, MacBook Pro 12', verbose_name='Полное название')),
            ],
            options={
                'verbose_name': 'MacBook',
                'verbose_name_plural': 'MacBook',
            },
        ),
        migrations.CreateModel(
            name='Markup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_models', models.CharField(max_length=10, verbose_name='Устройство')),
                ('markup', models.SmallIntegerField(verbose_name='Процент наценки')),
                ('flag', models.BooleanField(default=False, verbose_name='Счет в процентах?')),
                ('markup_int', models.SmallIntegerField(null=True, verbose_name='Наценка в рублях')),
            ],
            options={
                'verbose_name': 'Наценка',
                'verbose_name_plural': 'Наценки',
            },
        ),
        migrations.CreateModel(
            name='SpecialCharacter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_variant', models.CharField(max_length=30, verbose_name='Вариант поставщика')),
                ('new_variant', models.CharField(max_length=30, verbose_name='Вариант на сайте')),
            ],
            options={
                'verbose_name': 'Спецификация',
                'verbose_name_plural': 'Спецификации',
            },
        ),
        migrations.CreateModel(
            name='Watch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.TextField(help_text='44mm, 45mm', verbose_name='Размер')),
                ('size_exists', models.TextField(help_text='44,45', verbose_name='Размер без mm')),
                ('series', models.TextField(help_text='5,6,7...', verbose_name='Серии')),
                ('series_full_names', models.TextField(help_text='Series 3, Series 4', verbose_name='Серии')),
                ('extra', models.TextField(help_text='SE...', verbose_name='Extra имена')),
            ],
            options={
                'verbose_name': 'Watch',
                'verbose_name_plural': 'Watch',
            },
        ),
    ]
