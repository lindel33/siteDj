import time
import requests
import telebot
from data import (get_category, get_products,
                  get_detail_product, get_series,
                  get_current_product, get_not_category, filter_price, get_actual_price)

# TELEGRAM_URL = 'https://api.telegram.org/bot5239855839:AAGpK1VN7Lr2LDkq0WRC4onTLbYTWyrcc3g'
TOKEN = '5239855839:AAGpK1VN7Lr2LDkq0WRC4onTLbYTWyrcc3g'
URL_BITRIX = 'https://im.bitrix.info/imwebhook/eh/cde3fe41e972cc1f1501bbd0a6d330a11644378495/'

client = telebot.TeleBot(TOKEN)
name_category = ['iPhone', 'iPad', 'MacBook',
                 'AirPods', 'Watch',
                 '–î–æ–ø. —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞'] + get_not_category()

# client.set_webhook(url='https://tuneapple.pythonanywhere.com/api')
global_price = [
        ['–û—Ç 0 –¥–æ 10000'],
        ['–û—Ç 10000 –¥–æ 20000'],
        ['–û—Ç 20000 –¥–æ 30000'],
        ['–û—Ç 30000 –¥–æ 40000'],
        ['–û—Ç 40000 –¥–æ 50000'],
        ['–û—Ç 50000 –¥–æ 100000'],
        ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
    ]
global_prices = [
        ['üôã–ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å'],
        ['–ü—Ä–∞–π—Å iPhone'],
        ['–ü—Ä–∞–π—Å iPad'],
        ['–ü—Ä–∞–π—Å MacBook'],
        ['–ü—Ä–∞–π—Å Apple Watch'],
        ['–ü—Ä–∞–π—Å AirPods'],
        ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
    ]
current_category = list(set([x[1] for x in get_current_product()]))


@client.message_handler(regexp='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
@client.message_handler(commands=['start'])
def start_message(message, text='–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏?'):
    category = get_category()
    categories = [[x[1]] for x in category]
    categories.insert(0, ['–ú–æ–π –±—é–¥–∂–µ—Ç'])
    categories.insert(1, ['–ö—É–ø–∏—Ç—å –Ω–æ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ'])

    keyboard_category = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_category.keyboard = categories
    client.send_message(chat_id=message.chat.id,
                        text=text,
                        reply_markup=keyboard_category)


@client.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ –∫ –ø—Ä–∞–π—Å–∞–º')
@client.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å –Ω–æ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ')
def actual_price(message):
    keyboard_actual = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_actual.keyboard = global_prices
    client.send_message(chat_id=message.chat.id,
                        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª",
                        reply_markup=keyboard_actual)


@client.message_handler(func=lambda message: message.text.split()[0] == '–ü—Ä–∞–π—Å')
def price(message):
    text = get_actual_price(message.text)
    price_tmp = global_prices

    keyboard_actual = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_actual.keyboard = global_prices
    client.send_message(chat_id=message.chat.id,
                        text=text[0][1],
                        reply_markup=keyboard_actual)


@client.message_handler(func=lambda message: message.text
                                             in [x[1].split()[0] + ' ' + x[1].split()[1]
                                                 for x in get_products(message.text)])
def models(message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –º–æ–¥–µ–ª–∏ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    :param message:
    :return:
    """
    text = message.text
    products = [x[1] for x in get_products(text)]
    products.sort()
    products = [[x] for x in products]
    products.append(['–ù–∞–∑–∞–¥ –∫ ' + text.split()[0]])
    keyboard_products = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_products.keyboard = products
    client.send_message(chat_id=message.chat.id,
                        text='–ò—â—É: ' + text,
                        reply_markup=keyboard_products)


@client.message_handler(func=lambda message: message.text == 'üì± iPhone')
@client.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ –∫ iPhone')
def iphone_menu(message):
    text = 'iPhone'
    category = [[x[0]] for x in get_series(text) if x[0] in current_category]
    if category == []:
        start_message(message,
                          text='  '
                              ''
                              ' –∫–∞—Ç–µ–≥–æ—Ä–∏ —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æüòî\n'
                          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–∞–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ\n'
                          ' https://t.me/tuneapple üëà')
        return 0
    category.append(['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = category
    client.send_message(chat_id=message.chat.id,
                        text='–í–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–µ',
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text == 'üì≤ iPad')
@client.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ –∫ iPad')
def ipad_menu(message):
    text = 'iPad'
    category = [[x[0]] for x in get_series(text) if x[0] in current_category]
    if category == []:
        start_message(message,
                      text='–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏ —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æüòî\n'
                          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–∞–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ\n'
                          ' https://t.me/tuneapple üëà')
        return 0
    category.append(['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = category
    client.send_message(chat_id=message.chat.id,
                        text='–í–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–µ',
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text == 'üíª MacBook')
@client.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ –∫ MacBook')
def macbook_menu(message):
    text = 'MacBook'
    category = [[x[0]] for x in get_series(text) if x[0] in current_category]
    if category == []:
        start_message(message,
                      text='–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏ —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æüòî\n'
                          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–∞–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ\n'
                          ' https://t.me/tuneapple üëà')
        return 0
    category.append(['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = category
    client.send_message(chat_id=message.chat.id,
                        text='–í–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–µ',
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text == 'üéß AirPods')
@client.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ –∫ AirPods')
def airpods_menu(message):
    text = 'AirPods'
    category = [[x[0]] for x in get_series(text) if x[0] in current_category]
    if category == []:
        start_message(message,
                      text='–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏ —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æüòî\n'
                          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–∞–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ\n'
                          ' https://t.me/tuneapple üëà')
        return 0
    category.append(['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = category
    client.send_message(chat_id=message.chat.id,
                        text='–í–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–µ',
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text == '‚åöÔ∏è Watch')
@client.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ –∫ Watch')
def watch_menu(message):
    text = 'Watch'
    category = [[x[0]] for x in get_series(text) if x[0] in current_category]
    if category == []:
        start_message(message,
                      text='–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏ —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æüòî\n'
                          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–∞–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ\n'
                          ' https://t.me/tuneapple üëà')
        return 0
    category.append(['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = category
    client.send_message(chat_id=message.chat.id,
                        text='–í–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–µ',
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text == '‚å®Ô∏è –î–æ–ø. —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞')
@client.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ –∫ –î–æ–ø. —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º')
def extra_menu(message):
    text = '–î–æ–ø. —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞'
    category = [[x[1]] for x in get_products(text)]
    if category == []:
        start_message(message,
                      text='–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏ —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æüòî\n'
                          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–∞–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ\n'
                          ' https://t.me/tuneapple üëà')
        return 0
    category.append(['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = category
    client.send_message(chat_id=message.chat.id,
                        text='–í–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–µ',
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text == '–ú–æ–π –±—é–¥–∂–µ—Ç')
@client.message_handler(func=lambda message: message.text == '–†–∞—Å—á–∏—Ç–∞—Ç—å –µ—â–µ —Ä–∞–∑')
def watch_menu(message):

    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = global_price
    client.send_message(chat_id=message.chat.id,
                        text='–í—ã–±–æ—Ä –±—é–¥–∂–µ—Ç–∞',
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text.split()[0] == '–û—Ç')
def cost_menu(message):
    text = message.text.split()
    price_min = text[1]
    price_max = text[3]
    price = [x[0] + '\n' for x in filter_price(price_min, price_max)]
    if price == []:
        keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
        keyboard_models_iphone.keyboard = global_price
        client.send_message(chat_id=message.chat.id,
                            text="–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤",
                            reply_markup=keyboard_models_iphone)
        return 0
    price.sort(reverse=True)

    keyboard_price = [['–†–∞—Å—á–∏—Ç–∞—Ç—å –µ—â–µ —Ä–∞–∑'],
                      ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']] +\
                     [[x[0]] for x in filter_price(price_min, price_max)]

    keyboard_models_iphone = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard_models_iphone.keyboard = keyboard_price
    client.send_message(chat_id=message.chat.id,
                        text="".join(price),
                        reply_markup=keyboard_models_iphone)


@client.message_handler(func=lambda message: message.text.split()[0] in name_category)
def send_message(message):
    print(message.chat.id)
    """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        :param message:
        :return:
    """
    name = message.text.split()
    name = name[0] + ' ' + name[1]
    products = [x[1] for x in get_products(name)]
    if message.text in products:
        products.remove(message.text)
    products.sort()
    products = [[x] for x in products]
    products.append(['üôã‚Äç‚ôÄ–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å\n' + message.text])

    if message.text.split()[0] not in get_not_category():
        products.append(['–ù–∞–∑–∞–¥ –∫ ' + message.text.split()[0]])
    else:
        products.append(['–ù–∞–∑–∞–¥ –∫ –î–æ–ø. —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º'])

    keyboard = telebot.types.ReplyKeyboardMarkup(True, True)
    keyboard.keyboard = products
    detail_product = get_detail_product(message.text)
    f1, f2, f3 = open('media/' + detail_product[1], 'rb'), \
                 open('media/' + detail_product[2], 'rb'), \
                 open('media/' + detail_product[3], 'rb')
    f1, f2, f3 = f1.read(), f2.read(), f3.read()

    client.send_media_group(chat_id=message.chat.id, media=[
        telebot.types.InputMediaPhoto(f1, caption=detail_product[6]),
        telebot.types.InputMediaPhoto(f2),
        telebot.types.InputMediaPhoto(f3), ])
    client.send_message(chat_id=message.chat.id,
                        text='–•–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —ç—Ç—É –º–æ–¥–µ–ª—å?',
                        reply_markup=keyboard)


@client.message_handler(func=lambda message: message.text == 'üôã–ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å')
@client.message_handler(func=lambda message: message.text.split()[0] == 'üôã‚Äç‚ôÄ–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å')
@client.message_handler(content_types=['text'])
def bitrix_message(message):
    try:
        jsn = message.__dict__.get('json')
        ts = {'update_id': 287246100,
              'message': {'message_id': jsn['message_id'],
                          'from': {'id': jsn['from']['id'],
                                  'is_bot': False,
                                  'first_name': jsn['from']['first_name'],
                                  'language_code': jsn['from']['language_code']},
                          'chat': {'id': jsn['chat']['id'],
                                  'first_name': jsn['chat']['first_name'],
                                  'type': jsn['chat']['type']},
                          'date': jsn['date'],
                          'text': jsn['text']}}

        requests.post(URL_BITRIX, json=ts)
        if message.text.lower().split()[0] == 'üôã‚Äç‚ôÄ–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å' or \
                message.text.lower() == '–∫—É–ø–∏—Ç—å –Ω–æ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ' or \
                message.text.lower() == 'üôã–∫—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å' or \
                message.text.lower() == '–∫–∞–∫ –∫—É–ø–∏—Ç—å':
            start_message(message, text='–í–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω üëç \n'
                                        '–ú–µ–Ω–µ–¥–∂–µ—Ä —É–∂–µ –≤ –ø—É—Ç–∏ üêå')
    except Exception as _:
        jsn = message.__dict__.get('json')
        ts = {'update_id': 287246100,
              'message': {'message_id': jsn['message_id'],
                          'from': {'id': jsn['from']['id'],
                                  'is_bot': False,
                                  'first_name': jsn['from']['first_name'],
                                  'language_code': jsn['from']['language_code']},
                          'chat': {'id': jsn['chat']['id'],
                                  'first_name': jsn['chat']['first_name'],
                                  'type': jsn['chat']['type']},
                          'date': jsn['date'],
                          'text': jsn['text']}}

        requests.post(URL_BITRIX, json=ts)
        start_message(message, text='–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é üôÑ\n'
                                    '–ù–∞–ø–∏—à–∏—Ç–µ –µ—â–µ —Ä–∞–∑')

client.polling(none_stop=True)
